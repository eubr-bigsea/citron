& {
  padding-top: 5px;
  width: 100%;
  height: 100%;

  &.display-form {
    padding-right: 0;
    #lemonade-container {
      width: calc(100% - 300px);
      padding-right: 0;
    }
  }

  .diagram-options {
    border: 1px solid #d7dde4;
    display: block;
    width: fit-content;
    height: 40px;
    padding: 2px 15px;
    label {
      margin-right: 15px;
    }
    a {
      background: none;
      border: none;
      color: $color-darker;
      height: 35px;
      width: 35px;
      padding: 0px 4px;
      cursor: pointer;
      i {
        font-size: 1.7rem;
      }
      &:focus, &:active {
        background: white;
        color: $color-darker;
        box-shadow: none;
        border: none !important;
      }
      &:hover {
        background: $color-light;
        color: white;
      }
      &.disable {
        cursor: no-drop;
        color: #ccc;
        &:hover {
          background: none;
        }
      }
      &.border {
        padding: 0;
        border: 1px solid #d7dde4;
      }
    }

  }

  #lemonade-container {
    position: relative;
    width: 100%;
    overflow: auto;
    height: -webkit-calc(100% - 40px);
    height: -moz-calc(100% - 40px);
    height: calc(100% - 40px);
    float: left;
  }


  #lemonade-diagram {
    z-index: 0;
    background: url('images/grid1.png');
    position: relative;
    min-height: calc(690px * (90/150));
    height: 5000px;
    width: 5000px;
    -webkit-touch-callout: none; /* iOS Safari */
    -webkit-user-select: none;   /* Chrome/Safari/Opera */
    -khtml-user-select: none;    /* Konqueror */
    -moz-user-select: none;      /* Firefox */
    -ms-user-select: none;       /* Internet Explorer/Edge */
    user-select: none;

    //Default Connection
    .jtk-connector {
      z-index: 1;
      path {
        stroke: $color-darker;
        fill: $color-darker;
        stroke-width: 1.75;
        cursor: pointer;
      }

      &.will-remove {
        path {
          stroke: $color-error;
          fill: $color-error;
        }
      }
    }

    // style remove connection btn
    .jtk-overlay {
      &.close-btn {
        z-index: 3;
        display: none;
        position: fixed !important;
        background: none !important;
        color: $color-error !important;
        z-index: 3;
        font-size: 1.3rem;
        i {
          //font-weight: 600;
        }
        &.jtk-hover {
          display: block;
        }
      }
      // default label
      &.label-overlay {
        display: none;
        color: $color-darker;
        &.jtk-hover {
          display: block;
        }
      }
    }

    // Default Endpoint

    .jtk-endpoint {
      z-index: 2;
      rect {
        fill: $color-darker;
      }
      circle {
        fill: $color-darker;
      }

      &.will-remove {
        rect {
          fill: $color-error;
        }
        circle {
          fill: $color-error;
        }
      }
    }
    /* .jtk-endpoint, .jtk-connector {
    &.data {
      path {
        stroke: $color-data;
        fill: $color-data;
      }
      rect {
        fill: $color-data;
      }
      circle {
        fill: $color-data;
      }
    }
    &.iregressionalgorithm {
      path {
        stroke: $color-iregressionalgorithm;
        fill: $color-iregressionalgorithm;
      }
      rect {
        fill: $color-iregressionalgorithm;
      }
      circle {
        fill: $color-iregressionalgorithm;
      }
    }
    &.iregressionmodel {
      path {
        stroke: $color-iregressionmodel;
        fill: $color-iregressionmodel;
      }
      rect {
        fill: $color-iregressionmodel;
      }
      circle {
        fill: $color-iregressionmodel;
      }
    }
    &.irecommendationalgorithm {
      path {
        stroke: $color-irecommendationalgorithm;
        fill: $color-irecommendationalgorithm;
      }
      rect {
        fill: $color-irecommendationalgorithm;
      }
      circle {
        fill: $color-irecommendationalgorithm;
      }
    }
    &.irecommendationmodel {
      path {
        stroke: $color-irecommendationmodel;
        fill: $color-irecommendationmodel;
      }
      rect {
        fill: $color-irecommendationmodel;
      }
      circle {
        fill: $color-irecommendationmodel;
      }
    }
    &.classificationalgorithm {
      path {
        stroke: $color-classificationalgorithm;
        fill: $color-classificationalgorithm;
      }
      rect {
        fill: $color-classificationalgorithm;
      }
      circle {
        fill: $color-classificationalgorithm;
      }
    }
    &.classificationmodel {
      path {
        stroke: $color-classificationmodel;
        fill: $color-classificationmodel;
      }
      rect {
        fill: $color-classificationmodel;
      }
      circle {
        fill: $color-classificationmodel;
      }
    }
    &.iclusteringalgorithm {
      path {
        stroke: $color-iclusteringalgorithm;
        fill: $color-iclusteringalgorithm;
      }
      rect {
        fill: $color-iclusteringalgorithm;
      }
      circle {
        fill: $color-iclusteringalgorithm;
      }
    }
    &.iclusteringmodel {
      path {
        stroke: $color-iclusteringmodel;
        fill: $color-iclusteringmodel;
      }
      rect {
        fill: $color-iclusteringmodel;
      }
      circle {
        fill: $color-iclusteringmodel;
      }
    }
    &.transformationmodel {
      path {
        stroke: $color-transformationmodel;
        fill: $color-transformationmodel;
      }
      rect {
        fill: $color-transformationmodel;
      }
      circle {
        fill: $color-transformationmodel;
      }
    }
    &.indexermodel {
      path {
        stroke: $color-indexermodel;
        fill: $color-indexermodel;
      }
      rect {
        fill: $color-indexermodel;
      }
      circle {
        fill: $color-indexermodel;
      }
    }
    &.visualization {
      path {
        stroke: $color-visualization;
        fill: $color-visualization;
      }
      rect {
        fill: $color-visualization;
      }
      circle {
        fill: $color-visualization;
      }
    }
    &.ivocabulary {
      path {
        stroke: $color-ivocabulary;
        fill: $color-ivocabulary;
      }
      rect {
        fill: $color-ivocabulary;
      }
      circle {
        fill: $color-ivocabulary;
      }
    }
    &.ilistofmachinelearningmodels {
      path {
        stroke: $color-ilistofmachinelearningmodels;
        fill: $color-ilistofmachinelearningmodels;
      }
      rect {
        fill: $color-ilistofmachinelearningmodels;
      }
      circle {
        fill: $color-ilistofmachinelearningmodels;
      }
    }
    &.lshmodel {
      path {
        stroke: $color-lshmodel;
        fill: $color-lshmodel;
      }
      rect {
        fill: $color-lshmodel;
      }
      circle {
        fill: $color-lshmodel;
      }
    }
    &.machinelearningmodel {
      path {
        stroke: $color-machinelearningmodel;
        fill: $color-machinelearningmodel;
      }
      rect {
        fill: $color-machinelearningmodel;
      }
      circle {
        fill: $color-machinelearningmodel;
      }
    }
    &.modelwithevaluation {
      path {
        stroke: $color-modelwithevaluation;
        fill: $color-modelwithevaluation;
      }
      rect {
        fill: $color-modelwithevaluation;
      }
      circle {
        fill: $color-modelwithevaluation;
      }
    }
  }
  */

  .jtk-endpoint, .jtk-connector {
    &.jtk-dragging, &.drag-input, &.drag-output.jtk-drag, &.jtk-hover:not(.will-remove)  {
      &.data {
        path {
          stroke: $color-data;
          fill: $color-data;
        }
        rect {
          fill: $color-data;
        }
        circle {
          fill: $color-data;
        }
      }
      &.iregressionalgorithm {
        path {
          stroke: $color-iregressionalgorithm;
          fill: $color-iregressionalgorithm;
        }
        rect {
          fill: $color-iregressionalgorithm;
        }
        circle {
          fill: $color-iregressionalgorithm;
        }
      }
      &.iregressionmodel {
        path {
          stroke: $color-iregressionmodel;
          fill: $color-iregressionmodel;
        }
        rect {
          fill: $color-iregressionmodel;
        }
        circle {
          fill: $color-iregressionmodel;
        }
      }

      &.irecommendationalgorithm {
        path {
          stroke: $color-irecommendationalgorithm;
          fill: $color-irecommendationalgorithm;
        }
        rect {
          fill: $color-irecommendationalgorithm;
        }
        circle {
          fill: $color-irecommendationalgorithm;
        }
      }
      &.irecommendationmodel {
        path {
          stroke: $color-irecommendationmodel;
          fill: $color-irecommendationmodel;
        }
        rect {
          fill: $color-irecommendationmodel;
        }
        circle {
          fill: $color-irecommendationmodel;
        }
      }

      &.classificationalgorithm {
        path {
          stroke: $color-classificationalgorithm;
          fill: $color-classificationalgorithm;
        }
        rect {
          fill: $color-classificationalgorithm;
        }
        circle {
          fill: $color-classificationalgorithm;
        }
      }

      &.classificationmodel {
        path {
          stroke: $color-classificationmodel;
          fill: $color-classificationmodel;
        }
        rect {
          fill: $color-classificationmodel;
        }
        circle {
          fill: $color-classificationmodel;
        }
      }
      &.iclusteringalgorithm {
        path {
          stroke: $color-iclusteringalgorithm;
          fill: $color-iclusteringalgorithm;
        }
        rect {
          fill: $color-iclusteringalgorithm;
        }
        circle {
          fill: $color-iclusteringalgorithm;
        }
      }
      &.iclusteringmodel {
        path {
          stroke: $color-iclusteringmodel;
          fill: $color-iclusteringmodel;
        }
        rect {
          fill: $color-iclusteringmodel;
        }
        circle {
          fill: $color-iclusteringmodel;
        }
      }
      &.transformationmodel {
        path {
          stroke: $color-transformationmodel;
          fill: $color-transformationmodel;
        }
        rect {
          fill: $color-transformationmodel;
        }
        circle {
          fill: $color-transformationmodel;
        }
      }
      &.indexermodel {
        path {
          stroke: $color-indexermodel;
          fill: $color-indexermodel;
        }
        rect {
          fill: $color-indexermodel;
        }
        circle {
          fill: $color-indexermodel;
        }
      }
      &.visualization {
        path {
          stroke: $color-visualization;
          fill: $color-visualization;
        }
        rect {
          fill: $color-visualization;
        }
        circle {
          fill: $color-visualization;
        }
      }
      &.ivocabulary {
        path {
          stroke: $color-ivocabulary;
          fill: $color-ivocabulary;
        }
        rect {
          fill: $color-ivocabulary;
        }
        circle {
          fill: $color-ivocabulary;
        }
      }
      &.ilistofmachinelearningmodels {
        path {
          stroke: $color-ilistofmachinelearningmodels;
          fill: $color-ilistofmachinelearningmodels;
        }
        rect {
          fill: $color-ilistofmachinelearningmodels;
        }
        circle {
          fill: $color-ilistofmachinelearningmodels;
        }
      }
      &.lshmodel {
        path {
          stroke: $color-lshmodel;
          fill: $color-lshmodel;
        }
        rect {
          fill: $color-lshmodel;
        }
        circle {
          fill: $color-lshmodel;
        }
      }
      &.machinelearningmodel {
        path {
          stroke: $color-machinelearningmodel;
          fill: $color-machinelearningmodel;
        }
        rect {
          fill: $color-machinelearningmodel;
        }
        circle {
          fill: $color-machinelearningmodel;
        }
      }
      &.modelwithevaluation {
        path {
          stroke: $color-modelwithevaluation;
          fill: $color-modelwithevaluation;
        }
        rect {
          fill: $color-modelwithevaluation;
        }
        circle {
          fill: $color-modelwithevaluation;
        }
      }

    }
  }
}
}
